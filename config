# Example uzbl config. All settings are optional. You can use uzbl without
# any config at all (but it won't do much).

# === Core settings ==========================================================

# Install location prefix.
set prefix     = /usr/local

# Interface paths.
set fifo_dir   = /tmp
set socket_dir = /tmp

set shell_cmd       = sh -c

# === General config aliases =================================================

# Config related events (use the request function):
# request MODE_CONFIG <mode> <key> = <value>
set mode_config     = request MODE_CONFIG
# request ON_EVENT <EVENT_NAME> <command>
set on_event        = request ON_EVENT
# request ON_SET   <key/glob> <command>
set on_set          = request ON_SET
# request MODMAP <From> <To>
set modmap          = request MODMAP
# request IGNORE_KEY <glob>
set ignore_key      = request IGNORE_KEY
# request MODKEY_ADDITION <key1> <key2> <keyn> <result>
set modkey_addition = request MODKEY_ADDITION
# request TOGGLE_MODES <mode1> <mode2> ... <moden>
set toggle_modes    = request TOGGLE_MODES

set set_mode        = set mode =
set set_status      = set status_message =

# Spawn path shortcuts. In spawn the first dir+path match is used in "dir1:dir2:dir3:executable"
set scripts_dir     = $XDG_DATA_HOME/uzbl:@prefix/share/uzbl/examples/data:scripts

# === Hardcoded handlers =====================================================

# These handlers can't be moved to the new event system yet as we don't
# support events that can wait for a response from a script.
set cookie_handler      = talk_to_socket $XDG_CACHE_HOME/uzbl/cookie_daemon_socket
set scheme_handler      = sync_spawn @scripts_dir/scheme.py
set authentication_handler = sync_spawn @scripts_dir/auth.py

# === Dynamic event handlers =================================================

# Open link in new window
#@on_event   NEW_WINDOW     sh 'browser "$8"' %r
@on_event   NEW_WINDOW     sh "browser '%s'"
# Open in current window
#@on_event   NEW_WINDOW     uri %s
# Open in new tab
#@on_event   NEW_WINDOW     event NEW_TAB %s

# Download handler
#@on_event   DOWNLOAD_REQUEST    spawn @scripts_dir/download.sh %s \@proxy_url
@on_event   DOWNLOAD_REQUEST    spawn @scripts_dir/download.sh %s \@proxy_url
@on_event   SAVE_REQUEST        spawn @scripts_dir/save.sh \@proxy_url
@on_event   YANK                sh "echo '%s' | xsel -i"
@on_event   YANK_URL            sh "echo $6 | xsel -i"


# Load start handler
@on_event   LOAD_START     @set_status <span foreground="#969894"> ] <span foreground="#e9b96e">? </span></span>
# Reset the keycmd on navigation
@on_event   LOAD_START     @set_mode

# Load commit handlers
@on_event   LOAD_COMMIT    @set_status <span foreground="#969894"> ] <span foreground="#e9b96e">=\></span> </span>
@on_event   LOAD_COMMIT    script @scripts_dir/flashblock.js
#@on_event   LOAD_COMMIT    @on_event   LOAD_COMMIT    spawn @scripts_dir/adblock.py


# Load finish handlers
@on_event   LOAD_FINISH    @set_status <span foreground="#969894"> ] </span>
@on_event   LOAD_FINISH    spawn @scripts_dir/history.sh

# Switch to insert mode if a (editable) html form is clicked
@on_event   FORM_ACTIVE    @set_mode insert
# Switch to command mode if anything else is clicked
@on_event   ROOT_ACTIVE    @set_mode command

# Example CONFIG_CHANGED event handler
#@on_event  CONFIG_CHANGED print Config changed: %1 = %2

set proxy_url = http://10.6.6.1:8118

# === Behaviour and appearance ===============================================

set show_status       = 1
set status_top        = 1
set status_background = #2e3436

set modcmd_style      = weight="bold" foreground="red"
set keycmd_style      = weight="light" foreground="#e9b96e"
set prompt_style      = foreground="#969894"
set cursor_style      = underline="single"
set completion_style  = foreground="#e9b96e"
set hint_style        = weight="bold"

set mode_section      = <span foreground="#e9b96e">\@[\@mode_indicator]\@</span>
set keycmd_section    = <span foreground="#969894"><span \@prompt_style>\@[\@keycmd_prompt]\@</span><span \@modcmd_style>\@modcmd</span><span \@keycmd_style>\@keycmd</span><span \@completion_style>\@completion_list</span> [ </span>
set progress_section  = <span foreground="#969894">\@[\@progress.output]\@</span>
set scroll_section    = <span foreground="#e9b96e">\@[\@scroll_message]\@</span>
set uri_section       = <span foreground="#619fcf">\@[\@uri]\@</span>
set name_section      = <span foreground="#969894">\@[\@NAME]\@</span>
set status_section    = <span foreground="#e9b96e">\@status_message</span>
set selected_section  = <span foreground="#619fcf">\@[\@SELECTED_URI]\@</span>

#set status_format     = <span font_family="Terminus">@mode_section@keycmd_section@progress_section @uri_section @name_section @status_section @scroll_section @selected_section</span>
set status_format     = <span font_family="Terminus">@mode_section@keycmd_section@uri_section@status_section@progress_section @selected_section</span>

set title_format_long = \@keycmd_prompt \@raw_modcmd \@raw_keycmd \@TITLE - Uzbl browser \@SELECTED_URI

# Progress bar config
# %d = done, %p = pending %c = percent done, %i = int done, %s = spinner,
# %t = percent pending, %o = int pending, %r = sprite scroll
set progress.width      = 5
set progress.format     = %c
set progress.done       = 
set progress.pending    =

# === Useragent setup ========================================================

set useragent         = Uzbl (Webkit @{WEBKIT_MAJOR}.@{WEBKIT_MINOR}.@{WEBKIT_MICRO}) (@(+uname -sm)@ [@ARCH_UZBL]) (Commit @COMMIT)
#set useragent         = Mozilla/5.0 (X11; U; Linux i686; en-US) AppleWebKit/534.3 (KHTML, like Gecko) Chrome/6.0.459.0 Safari/534.3

# === Key binding configuration ==============================================
# --- Internal modmapping and ignoring ---------------------------------------

#modmap <From>          <To>
@modmap <Control>       <Ctrl>
@modmap <ISO_Left_Tab>  <Shift-Tab>
@modmap <space>         <Space>

#modkey_addition <Key1>  <Key2>    <Result>
@modkey_addition <Shift> <Ctrl>    <Meta>
@modkey_addition <Shift> <Tab>     <Shift-Tab>
@modkey_addition <Shift> <Insert>  <Shift-Insert>

#ignore_key <glob>
@ignore_key <ISO_*>
@ignore_key <Shift>
@ignore_key <Super>

# --- Bind aliases -----------------------------------------------------------

# request BIND <bind cmd> = <command>
set bind      = request MODE_BIND global

# request MODE_BIND <mode> <bind cmd> = <command>
set mode_bind = request MODE_BIND

# Insert mode binding alias
set ibind     = @mode_bind insert

# Command mode binding alias
set cbind     = @mode_bind command

# Non-insert mode bindings alias (ebind for edit-bind).
set ebind     = @mode_bind global,-insert

# --- Global & keycmd editing binds ------------------------------------------

# Resets keycmd and returns to default mode.
@on_event  ESCAPE    @set_mode
@bind   <Escape>     = event ESCAPE
@bind   <Ctrl>[      = event ESCAPE
#@on_event   LOAD_COMMIT    spawn @scripts_dir/adblock.py
@on_event   LOAD_COMMIT    spawn @scripts_dir/noscript.py
@on_event   LOAD_COMMIT    spawn @scripts_dir/noplugin.py

#@on_event   LOAD_PROGRESS  js uzblAdBlock();
#@on_event   REQUEST_STARTING  spawn @scripts_dir/noscript.py

# Commands for editing and traversing the keycmd.
@ebind  <Return>     = event KEYCMD_EXEC_CURRENT
@ebind  <Home>       = event SET_CURSOR_POS 0
@ebind  <End>        = event SET_CURSOR_POS -1
@ebind  <Left>       = event SET_CURSOR_POS -
@ebind  <Right>      = event SET_CURSOR_POS +
@ebind  <BackSpace>  = event KEYCMD_BACKSPACE
@ebind  <Delete>     = event KEYCMD_DELETE
@ebind  <Tab>        = event START_COMPLETION
# Readline-ish bindings.
@ebind  <Ctrl>w      = event KEYCMD_STRIP_WORD
@ebind  <Ctrl>u      = event SET_KEYCMD
@ebind  <Ctrl>a      = event SET_CURSOR_POS 0
@ebind  <Ctrl>e      = event SET_CURSOR_POS -1

# --- Mouse bindings ---------------------------------------------------------

# Middle click open in new window
@bind  <Button2>  = sh 'if [ "$8" ]; then browser "$8"; else echo "uri $(xsel -o | sed s/\\\@/%40/g)" > $4; fi' \@SELECTED_URI

# --- Keyboard bindings ------------------------------------------------------

# With this command you can enter in any command at runtime when prefixed with
# a colon.
@cbind    :< :>_        = spawn @scripts_dir/cmd.py "%s"
@cbind    Ж< :>_        = spawn @scripts_dir/cmd.py "%s"

set default_encoding = UTF-8
#set disable_scripts = 1
#
@cbind \\u1 = set useragent         = Uzbl (Webkit @{WEBKIT_MAJOR}.@{WEBKIT_MINOR}.@{WEBKIT_MICRO}) (@(+uname -sm)@ [@ARCH_UZBL]) (Commit @COMMIT)
@cbind \\u2 = set useragent         = Mozilla/5.0 (X11; U; Linux i686; en-US) AppleWebKit/534.3 (KHTML, like Gecko) Chrome/6.0.459.0 Safari/534.3
@cbind \\г1 = set useragent         = Uzbl (Webkit @{WEBKIT_MAJOR}.@{WEBKIT_MINOR}.@{WEBKIT_MICRO}) (@(+uname -sm)@ [@ARCH_UZBL]) (Commit @COMMIT)
@cbind \\г2 = set useragent         = Mozilla/5.0 (X11; U; Linux i686; en-US) AppleWebKit/534.3 (KHTML, like Gecko) Chrome/6.0.459.0 Safari/534.3

@cbind ds  = set disable_scripts = 1
@cbind es  = set disable_scripts = 0
@cbind dp  = set disable_plugins = 1
@cbind ep  = set disable_plugins = 0

@cbind \\as = spawn @scripts_dir/adddomain.py 'scripton'
@cbind \\ap = spawn @scripts_dir/adddomain.py 'pluginon'

@cbind вы  = set disable_scripts = 1
@cbind уы  = set disable_scripts = 0
@cbind вз  = set disable_plugins = 1
@cbind уз  = set disable_plugins = 0

@cbind \\фы = spawn @scripts_dir/adddomain.py 'scripton'
@cbind \\фз = spawn @scripts_dir/adddomain.py 'pluginon'

@cbind  \\c         = spawn @scripts_dir/encoding.sh
@cbind  \\с         = spawn @scripts_dir/encoding.sh

@cbind  \\eb        = set proxy_url = http://10.6.6.1:8118
@cbind  \\db        = set proxy_url = 
@cbind  \\уи        = set proxy_url = http://10.6.6.1:8118
@cbind  \\ви        = set proxy_url = 

@cbind  gpv        = uri http://config.privoxy.org/show-status
@cbind  пзм        = uri http://config.privoxy.org/show-status

@cbind  gtp       = sh "browser 'http://config.privoxy.org/toggle?mini=y&set=toggle'"
@cbind  пез       = sh "browser 'http://config.privoxy.org/toggle?mini=y&set=toggle'"

# Page movement binds
@cbind  j            = scroll vertical 10%
#@cbind  j            = sh "echo 'scroll vertical 40' | socat - unix-connect:$5 && sleep 1000"
@cbind  k            = scroll vertical -10%
@cbind  h            = scroll horizontal -40
@cbind  l            = scroll horizontal 40
@cbind  <Page_Up>    = scroll vertical -100%
@cbind  <Page_Down>  = scroll vertical 100%
@cbind  <Ctrl>b      = scroll vertical -100%
@cbind  <Ctrl>f      = scroll vertical 100%
@cbind  K            = scroll vertical -100%
@cbind  J            = scroll vertical 100%
@cbind  <           = scroll vertical begin
@cbind  >           = scroll vertical end
@cbind  G            = scroll vertical end
@cbind  <Home>       = scroll vertical begin
@cbind  <End>        = scroll vertical end
@cbind  <Space>      = scroll vertical end
#Rus
@cbind  о            = scroll vertical 10%
@cbind  л            = scroll vertical -10%
@cbind  р            = scroll horizontal -40
@cbind  д            = scroll horizontal 40
@cbind  <Ctrl>и      = scroll vertical -100%
@cbind  <Ctrl>а      = scroll vertical 100%
@cbind  Л            = scroll vertical -100%
@cbind  О            = scroll vertical 100%
@cbind  Б           = scroll vertical begin
@cbind  Ю           = scroll vertical end
@cbind  П            = scroll vertical end

@cbind  <Up>         = scroll vertical -10%
@cbind  <Down>       = scroll vertical 10%
@cbind  <Left>       = scroll horizontal -10%
@cbind  <Right>      = scroll horizontal 10%

# Navigation binds
@cbind  b   = back
@cbind  m   = forward
@cbind  S   = stop
@cbind  r   = reload
@cbind  R   = reload_ign_cache
#Rus
@cbind  и   = back
@cbind  ь   = forward
@cbind  Ы   = stop
@cbind  к   = reload
@cbind  К   = reload_ign_cache
#/Rus

# Zoom binds
@cbind  +   = zoom_in
@cbind  -   = zoom_out
@cbind  T   = toggle_zoom_type
#Rus
@cbind  Е   = toggle_zoom_type
#/Rus
@cbind  1   = set zoom_level = 1.0
@cbind  2   = set zoom_level = 2.0

# Appearance binds
@cbind  t   = toggle_status
@cbind  е   = toggle_status

# Page searching binds
@cbind  /*  = search %s
@cbind  ?*  = search_reverse %s
@cbind  .*  = search %s
@cbind  ,*  = search_reverse %s
# Jump to next and previous items
@cbind  n   = search
@cbind  N   = search_reverse
@cbind  т   = search
@cbind  Т   = search_reverse
# Web searching binds
@cbind  gg<Google[EN]:>_     = uri http://www.google.com/search?q=\@<encodeURIComponent(%r)>\@
@cbind  gr<Google[RU]:>_     = uri http://www.google.ru/search?q=\@<encodeURIComponent(%r)>\@
@cbind  пп<Google[EN]:>_     = uri http://www.google.com/search?q=\@<encodeURIComponent(%r)>\@
@cbind  пк<Google[RU]:>_     = uri http://www.google.ru/search?q=\@<encodeURIComponent(%r)>\@

# Handy binds
# Set function shortcut
@cbind  s<var:>_<value:>_  = set %1 = %2
# Exit binding
@cbind  ZZ                 = exit
@cbind  ЯЯ                 = exit
# Dump config to stdout
#@cbind  !dump              = sh "echo dump_config > $4"
# Reload all variables in the config
#@cbind  !reload            = sh "sed '/^# === Post-load misc commands/,$d' $1 | grep '^set ' > $4"

# Use socat to directly inject commands into uzbl-core and view events
# raised by uzbl-core:
#@cbind  <Ctrl><Alt>t  = sh 'xterm -e "socat unix-connect:$5 -"'
@cbind  <Ctrl><Alt>t  = sh 'terminal -e socat unix-connect:$5 -'
@cbind  <Ctrl><Alt>l  = sh 'echo "socat unix-connect:$5 -" | xsel -i'
@cbind  <Ctrl><Alt>f  = sh 'echo "$4" | xsel -i'

@cbind  <Ctrl><Alt>е  = sh 'terminal -e socat unix-connect:$5 -'
@cbind  <Ctrl><Alt>д  = sh 'echo "socat unix-connect:$5 -" | xsel -i'
@cbind  <Ctrl><Alt>а  = sh 'echo "$4" | xsel -i'

# Uri opening prompts
@cbind  o<uri:>_       = uri %s
@cbind  щ<uri:>_       = uri %s
# Or have it load the current uri into the keycmd for editing
@cbind  O<uri:\@uri>_  = uri %s
@cbind  Щ<uri:\@uri>_  = uri %s

# Mode setting binds
@cbind  i        = @set_mode insert
@bind   <Ctrl>i  = @set_mode insert
@cbind  ш        = @set_mode insert
@bind   <Ctrl>ш  = @set_mode insert

# Hard-bound bookmarks
@cbind  guz         = uri http://www.uzbl.org
@cbind  пгя         = uri http://www.uzbl.org

@cbind  glor        = uri http://linux.org.ru
@cbind  gls         = uri http://local.via-net.org/screenshots

@cbind  пдщк        = uri http://linux.org.ru
@cbind  пды         = uri http://local.via-net.org/screenshots

@cbind  glp         = uri http://local.via-net.org/pictures/
@cbind  пдз         = uri http://local.via-net.org/pictures/
@cbind  glf         = uri http://local.via-net.org/files/
@cbind  пда         = uri http://local.via-net.org/files/
@cbind  ghs         = uri http://haskell.org
@cbind  пры         = uri http://haskell.org
@cbind  gpd         = uri http://docs.python.org
@cbind  пзв         = uri http://docs.python.org
@cbind  gdс         = uri http://dobrochan.ru
@cbind  пвс         = uri http://dobrochan.ru

@cbind  gjg         = uri http://jailbaitgallery.com/youngest.php?age=1
@cbind  поп         = uri http://jailbaitgallery.com/youngest.php?age=1
@cbind  gtg         = uri http://translate.google.ru
@cbind  пеп         = uri http://translate.google.ru
@cbind  gfu         = uri http://fffuuu.ru
@cbind  паг         = uri http://fffuuu.ru
@cbind  gmv         = uri http://mail.via-net.org
@cbind  пьм         = uri http://mail.via-net.org
@cbind  gvk         = uri http://vkontakte.ru
@cbind  пмл         = uri http://vkontakte.ru
@cbind  gyt         = uri http://youtube.com
@cbind  пне         = uri http://youtube.com

@cbind  gan         = uri http://animuchan.net
@cbind  пфт         = uri http://animuchan.net
@cbind  ghab         = uri http://habrahabr.ru
@cbind  прфи         = uri http://habrahabr.ru

@cbind   gjb        = uri http://djbook.ru/index.html
@cbind   пои        = uri http://djbook.ru/index.html

@cbind   gba        = uri http://baaaka.ru
@cbind   пиф        = uri http://baaaka.ru

@cbind   gal        = uri http://alug.org.ru/forum/
@cbind   пфд        = uri http://alug.org.ru/forum/

@cbind   gtbv       = uri http://www.fasttorrent.ru/film/teoriya-bolshogo-vzryva.html
@cbind   пеим       = uri http://www.fasttorrent.ru/film/teoriya-bolshogo-vzryva.html

@cbind   glt        = uri http://local.via-net.org/rtorrent/
@cbind   пде        = uri http://local.via-net.org/rtorrent/

@cbind   gos        = uri http://opensharing.org/
@cbind   пщы        = uri http://opensharing.org/

# Yanking & pasting binds
@cbind  yu  = sh 'echo -n $6 | xsel -i'
@cbind  yy  = sh 'echo -n $7 | xsel -i'
@cbind  нг  = sh 'echo -n $6 | xsel -i'
@cbind  нн  = sh 'echo -n $7 | xsel -i'

@bind <Shift-Insert> = sh 'echo "event INJECT_KEYCMD `xsel -o | sed s/\\\@/%40/g`" > $4'
@bind <Ctrl>v        = sh 'echo "event INJECT_KEYCMD `xsel -o | sed s/\\\@/%40/g`" > $4'
@bind <Ctrl>м        = sh 'echo "event INJECT_KEYCMD `xsel -o | sed s/\\\@/%40/g`" > $4'

@cbind  p            = sh 'echo "uri `xsel -o | sed s/\\\@/%40/g`" > $4'
@cbind  з            = sh 'echo "uri `xsel -o | sed s/\\\@/%40/g`" > $4'

# Bookmark inserting binds
@cbind <Ctrl>m<tags:>_  = sh 'echo "$6 %s" >> $XDG_DATA_HOME/uzbl/bookmarks'
@cbind <Ctrl>ь<tags:>_  = sh 'echo "$6 %s" >> $XDG_DATA_HOME/uzbl/bookmarks'
# Or use a script to insert a bookmark.
@cbind  M  = spawn @scripts_dir/insert_bookmark.sh
@cbind  Ь  = spawn @scripts_dir/insert_bookmark.sh

@cbind  \\s = spawn @scripts_dir/save.sh \@proxy_url
@cbind  \\ы = spawn @scripts_dir/save.sh \@proxy_url



# Bookmark/history loading
@cbind  U  = spawn @scripts_dir/load_url_from_history.sh
@cbind  u  = spawn @scripts_dir/load_url_from_bookmarks.sh
@cbind  Г  = spawn @scripts_dir/load_url_from_history.sh
@cbind  г  = spawn @scripts_dir/load_url_from_bookmarks.sh

@cbind  H  = spawn @scripts_dir/load_url_from_history.sh
@cbind  B  = spawn @scripts_dir/load_url_from_bookmarks.sh
@cbind  Р  = spawn @scripts_dir/load_url_from_history.sh
@cbind  И  = spawn @scripts_dir/load_url_from_bookmarks.sh

@cbind  a  = spawn @scripts_dir/show_all_bookmarks.sh
@cbind  ф  = spawn @scripts_dir/show_all_bookmarks.sh
@cbind  A  = spawn @scripts_dir/show_all_history.sh
@cbind  Ф  = spawn @scripts_dir/show_all_history.sh

# reduce the uri by b23.ru
@cbind  \\b = spawn @scripts_dir/b23.sh
@cbind  \\и = spawn @scripts_dir/b23.sh

# Link following (similar to vimperator and konqueror)
# Set custom keys you wish to use for navigation. Some common examples:
set follow_hint_keys = 1234567890

# follow links/forms
set follow              = spawn @scripts_dir/follow.sh '@follow_hint_keys %s'
set follow_new          = spawn @scripts_dir/follow_new.sh '@follow_hint_keys %s'
set follow_download     = spawn @scripts_dir/follow_download.sh '@follow_hint_keys %s'
set follow_yank         = spawn @scripts_dir/follow_yank.sh '@follow_hint_keys %s'

# follow images
set follow_img          = spawn @scripts_dir/follow_img.sh '@follow_hint_keys %s'
set follow_img_new      = spawn @scripts_dir/follow_img_new.sh '@follow_hint_keys %s'
set follow_img_download = spawn @scripts_dir/follow_img_download.sh '@follow_hint_keys %s'
set follow_img_yank     = spawn @scripts_dir/follow_img_yank.sh '@follow_hint_keys %s'

# keys to follow links/forms
@cbind  fl*  = @follow
@cbind  ад*  = @follow
@cbind  FL*  = @follow_new
@cbind  АД*  = @follow_new
@cbind  fdl* = @follow_download
@cbind  авд* = @follow_download
@cbind  fyl* = @follow_yank
@cbind  анд* = @follow_yank

# keys to follow images
@cbind  fi*  = @follow_img
@cbind  аш*  = @follow_img
@cbind  FI*  = @follow_img_new
@cbind  АШ*  = @follow_img_new
@cbind  fdi* = @follow_img_download
@cbind  авш* = @follow_img_download
@cbind  fyi* = @follow_img_yank
@cbind  анш* = @follow_img_yank

# Form filler binds
# This script allows you to configure (per domain) values to fill in form
# fields (eg login information) and to fill in these values automatically.
# This implementation allows you to save multiple profiles for each form
# (think about multiple accounts on some website).
set formfiller = spawn @scripts_dir/formfiller.sh
@cbind  za  = @formfiller add
@cbind  ze  = @formfiller edit
@cbind  zn  = @formfiller new
@cbind  zl  = @formfiller load
@cbind  яф  = @formfiller add
@cbind  яу  = @formfiller edit
@cbind  ят  = @formfiller new
@cbind  яд  = @formfiller load

# Focus the first form input and enter insert mode
@cbind  gi  = spawn @scripts_dir/go_input.sh
@cbind  пш  = spawn @scripts_dir/go_input.sh
#@cbind    e   = spawn $XDG_DATA_HOME/uzbl/scripts/menu.py open 
#@cbind    E   = spawn $XDG_DATA_HOME/uzbl/scripts/menu.py tab
#@cbind    у   = spawn $XDG_DATA_HOME/uzbl/scripts/menu.py open 
#@cbind    У   = spawn $XDG_DATA_HOME/uzbl/scripts/menu.py tab

# --- Uzbl tabbed binds ------------------------------------------------------

# Tab opening
#@cbind  gn              = event NEW_TAB
#@cbind  gN              = event NEW_TAB_NEXT
#@cbind  go<uri:>_       = event NEW_TAB %s
#@cbind  gO<uri:>_       = event NEW_TAB_NEXT %s
#@cbind  gY              = sh 'echo "event NEW_TAB `xclip -selection primary -o | sed s/\\\@/%40/g`" > $4'

# Closing / resting
#@cbind  gC              = exit
#@cbind  gQ              = event CLEAN_TABS

# Tab navigating
#@cbind  g<              = event FIRST_TAB
#@cbind  g>              = event LAST_TAB
#@cbind  gt              = event NEXT_TAB
#@cbind  gT              = event PREV_TAB
#@cbind  gi<index:>_     = event GOTO_TAB %s

# Preset loading
#set preset = event PRESET_TABS
#@cbind  gs<preset save:>_   = @preset save %s
#@cbind  glo<preset load:>_  = @preset load %s
#@cbind  gd<preset del:>_    = @preset del %s
#@cbind  gli                 = @preset list

# === Context menu items =====================================================

# Default context menu
menu_add Google = set uri = http://google.com
menu_add Go Home = set uri = http://uzbl.org
menu_separator separator_1
menu_add Quit uzbl = exit

# Link context menu
menu_link_add Print Link = print \@SELECTED_URI

# === Mode configuration =====================================================

# Define some mode specific uzbl configurations.
set command  = @mode_config command
set insert   = @mode_config insert
set stack    = @mode_config stack

# Command mode config.
@command  keycmd_style        = foreground="#e9b96e"
@command  status_background   = #2e3436 
@command  mode_indicator      = 
@command  keycmd_events       = 1
@command  forward_keys        = 0
@command  modcmd_updates      = 1

# Insert mode config.
@insert   keycmd_style        = foreground="red"
@insert   status_background   = brown
@insert   mode_indicator      = 
@insert   forward_keys        = 1
@insert   keycmd_events       = 0
@insert   modcmd_updates      = 0

# Multi-stage-binding mode config.
@stack    keycmd_events       = 1
@stack    modcmd_updates      = 1
@stack    forward_keys        = 0
@stack    keycmd_style        = foreground="white"
@stack    prompt_style        = foreground="#e9b96e" weight="light"
@stack    status_background   = #2e3436
@stack    mode_indicator      = 

set default_mode = command

# === Post-load misc commands ================================================

# Set the "home" page.
set uri = http://google.ru

# vim: set fdm=syntax:
